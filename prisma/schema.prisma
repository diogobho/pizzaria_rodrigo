generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customers {
  id         String   @id
  name       String
  phone      String   @unique
  address    String
  complement String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime
  orders     orders[]

  @@index([phone], map: "idx_customers_phone")
}

model delivery_persons {
  id        String   @id
  name      String
  transport String
  phone     String?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime
  orders    orders[]
}

model esfiha_flavors {
  id        String   @id
  name      String   @unique
  category  String
  price     Float
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model order_items {
  id           String    @id
  orderId      String
  type         String
  productId    String?
  productName  String
  quantity     Int
  unitPrice    Float
  totalPrice   Float
  observations String?
  pizzaDetails Json?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime
  orders       orders    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  products     products? @relation(fields: [productId], references: [id])
}

model orders {
  id                String            @id
  orderNumber       Int               @unique
  customerId        String
  deliveryPersonId  String?
  totalPrice        Float
  status            String            @default("nao-iniciado")
  observations      String?
  isScheduled       Boolean           @default(false)
  scheduledDateTime DateTime?
  deliveredAt       DateTime?
  createdAt         DateTime          @default(now())
  updatedAt         DateTime
  order_number      Int               @unique @default(autoincrement())
  order_items       order_items[]
  customers         customers         @relation(fields: [customerId], references: [id])
  delivery_persons  delivery_persons? @relation(fields: [deliveryPersonId], references: [id])

  @@index([status], map: "idx_orders_status")
}

model pizza_flavors {
  id        String   @id
  name      String   @unique
  category  String
  price     Float
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model products {
  id            String        @id
  name          String
  category      String
  price         Float
  inStock       Boolean       @default(true)
  stockQuantity Int           @default(0)
  description   String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime
  stock         Int?          @default(0)
  in_stock      Boolean?      @default(true)
  order_items   order_items[]
}

model users {
  id        String   @id
  username  String   @unique
  name      String
  password  String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime
}
