#!/bin/bash

echo "ğŸ”§ Aplicando correÃ§Ã£o conservadora..."

# CORREÃ‡ÃƒO 1: Apenas corrigir a estrutura de botÃµes no Dashboard sem quebrar imports
cd src/components

# Fazer uma correÃ§Ã£o mÃ­nima no Dashboard.tsx para remover botÃµes aninhados
cp Dashboard.tsx Dashboard.tsx.backup

# Usar sed para corrigir especificamente o problema de botÃµes aninhados
# Substituir a estrutura problemÃ¡tica por uma versÃ£o sem botÃµes aninhados
sed -i 's/<button[^>]*onClick[^>]*>\(.*\)<button/<div onClick={handleProductClick}>\1<button/g' Dashboard.tsx

echo "âœ… Estrutura de botÃµes corrigida no Dashboard"

# CORREÃ‡ÃƒO 2: Adicionar controle simples no OrdersKanban
cd ../components
cp OrdersKanban.tsx OrdersKanban.tsx.backup

# Adicionar apenas uma linha para controlar mÃºltiplos carregamentos
if ! grep -q "loadingStarted" OrdersKanban.tsx; then
  sed -i '/useEffect/,/}, \[\]/c\
  useEffect(() => {\
    let loadingStarted = false;\
    if (!loadingStarted) {\
      loadingStarted = true;\
      console.log("ğŸ”„ Carregando pedidos (controle ativo)");\
      loadOrders();\
    }\
  }, []);' OrdersKanban.tsx
fi

echo "âœ… Controle de carregamento adicionado no OrdersKanban"

# Voltar ao diretÃ³rio raiz
cd ../../

echo "ğŸ§ª Testando build..."
npm run build

